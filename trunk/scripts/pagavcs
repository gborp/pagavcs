#!/bin/bash

# PagaVCS is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# PagaVCS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with PagaVCS;  If not, see <http://www.gnu.org/licenses/>.

LOG_FILE="${HOME}/.pagavcs/pagavcs.log"

if [ -f "/usr/share/pagavcs/data/pagavcs-bigmem" ];
then
	START_SERVER_CMD="java -Xms16m -Xmx199m -XX:PermSize=16M -XX:MaxPermSize=32M -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:+UseCompressedOops -jar /usr/share/pagavcs/bin/pagavcs.jar > ${LOG_FILE} 2>&1"
else 
	START_SERVER_CMD="java -Xms16m -Xmx99m -XX:PermSize=16M -XX:MaxPermSize=32M -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:+UseCompressedOops -jar /usr/share/pagavcs/bin/pagavcs.jar > ${LOG_FILE} 2>&1"
fi 


CONFIG_FILE="${HOME}/.pagavcs/config.properties"
CFG_PORT_KEY="port"
DELIMETER="\="

DEFAULT_PORT=12905

function startserver {

	# check default java
	if [ `update-alternatives --query java | grep "Value:" | grep "gij" -c` == 1 ];
	then
		zenity --question --text="PagaVCS needs the default java to be OpenJDK- or SUN-JRE. Do you want to make it default?" --title "Change default Java for PagaVCS"
		
		RETVAL=$?
		if [ $RETVAL == 0 ];
		then
			if [ `update-alternatives --query java | grep "java-6-sun" -c` == 1 ];
			then
				gksudo "update-java-alternatives -s java-6-sun"
			elif [ `update-alternatives --query java | grep "java-6-openjdk" -c` == 1 ];				
			then
				gksudo "update-java-alternatives -s java-6-openjdk"
			else
				zenity --error --text "PagaVCS needs OpenJDK- or SUN-JRE"
			fi
		fi
	fi

	mv -f ${LOG_FILE}.1 ${LOG_FILE}.2 > /dev/null 2>&1
	mv -f ${LOG_FILE} ${LOG_FILE}.1 > /dev/null 2>&1
	rm -f ${LOG_FILE} > /dev/null 2>&1
	
	echo server is not running, start a new PagaVCS server
	${START_SERVER_CMD} &

	# waiting server to boot up    
	while [ ! -f /tmp/pagavcs/server-running-indicator ]; do
		sleep 0.5s
	done
}

# display help
if [ "x$1" == "x" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ];
then
	echo "usage: pagavcs [command] [argument(s)]"
	echo "  update        Update working copy."
	echo "  commit        Show commit dialog for working copy."
	echo "  log           Show log for working copy."
	echo "  ignore        Add file or directory to ignore list."
	echo "  unignore      Remove file or directory from ignore list."
	echo "  delete        Delete file or directory."
	echo "  revert        Revert file or directory."
	echo "  checkout      Checkout a working copy."
	echo "  cleanup       Cleanup working copy."
	echo "  resolve       Resolve conflict."
	echo "  other         Display other window."
	echo "  settings      Display settings window."
	echo "  stop          Stop PagaVCS server."
	echo "  getmenuitems  Get menuitems for file or directory. It is used by the nautilus-plugin."
	echo "  -h, --help    Display this help."
	echo ""
	echo "Example:"
	echo "  pagavcs update \"/home/johnny/big-project\" \"/home/johnny/mega-project\""
	exit
fi


PORT=12905

if [ -f "$CONFIG_FILE" ]; then
	PORT=`sed '/^\#/d' $CONFIG_FILE | grep "${CFG_PORT_KEY}\="  | tail -n 1 | sed 's/^.*=//;s/^[[:space:]]*//;s/[[:space:]]*$//'`
fi

exec 5<>/dev/tcp/localhost/${PORT}

# don't wakeup server for stop command
if [ "$1" == "stop" ];
then
	#echo stop PagaVCS-server
	echo "stop" >&5 2> /dev/null
	cat <&5
	exit
fi

# don't allow to be run as root
whoami=`whoami`
if [ "${whoami}" == "root" ];
then
	echo PagaVCS should not run as root!
fi

if [ ! -f /tmp/pagavcs/server-running-indicator ];
then
	#echo server not running, start a new PagaVCS server
	startserver
	exec 5<>/dev/tcp/localhost/${PORT}
fi

for x in "$@"; do
	echo -n '"'  >&5 2> /dev/null
	echo -n $x   >&5 2> /dev/null
	echo -n '" ' >&5 2> /dev/null
done
echo "" >&5 2> /dev/null
RETVAL=$?
cat <&5

#echo "send command to PagaVCS-server: $@"
#echo $args >&5 2> /dev/null
#RETVAL=$?
if [ $RETVAL != 0 ];
then
	rm -f /tmp/pagavcs/server-running-indicator
	startserver
	exec 5<>/dev/tcp/localhost/${PORT}
	for x in "$@"; do
		echo -n '"'  >&5 2> /dev/null
		echo -n $x   >&5 2> /dev/null
		echo -n '" ' >&5 2> /dev/null
	done
	echo "" >&5 2> /dev/null
	cat <&5
fi

