#!/bin/bash

# PagaVCS is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# PagaVCS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with PagaVCS;  If not, see <http://www.gnu.org/licenses/>.

START_SERVER_CMD="java -Xmx99m -jar /usr/share/pagavcs/bin/pagavcs.jar"
function startserver {

	# check default java
	if [ `update-alternatives --query java | grep "Value:" | grep "gij" -c` == 1 ];
	then
		zenity --question --text="PagaVCS needs the default java to be OpenJDK- or SUN-JRE. Do you want to make it default?" --title "Change default Java for PagaVCS"
		
		RETVAL=$?
		if [ $RETVAL == 0 ];
		then
			if [ `update-alternatives --query java | grep "java-6-sun" -c` == 1 ];
			then
				gksudo "update-java-alternatives -s java-6-sun"
			elif [ `update-alternatives --query java | grep "java-6-openjdk" -c` == 1 ];				
			then
				gksudo "update-java-alternatives -s java-6-openjdk"
			else
				zenity --error --text "PagaVCS needs OpenJDK- or SUN-JRE"
			fi
		fi
	fi
	
    echo server is not running, start a new PagaVCS server
    ${START_SERVER_CMD} &

    # waiting server to boot up    
    while [ ! -f /tmp/pagavcs/server-running-indicator ]; do
       sleep 0.5s
    done
}


# don't wakeup server for stop command
if [ "$1" == "stop" ];
then
	echo stop PagaVCS-server
	echo "stop" > /dev/tcp/localhost/12905 2> /dev/null
	exit
fi

# don't allow to be run as root
whoami=`whoami`
if [ "${whoami}" == "root" ];
then
   echo PagaVCS should not run as root!
fi

if [ ! -f /tmp/pagavcs/server-running-indicator ];
then
   echo server not running, start a new PagaVCS server
   startserver
fi

echo "send command to PagaVCS-server: $@"
echo $@ > /dev/tcp/localhost/12905 2> /dev/null
RETVAL=$?
if [ $RETVAL != 0 ];
then
    echo "failed, (re)starting PagaVCS-server"
    rm -f /tmp/pagavcs/server-running-indicator
    startserver
    echo "resend command to PagaVCS-server: $@"
    echo $@ > /dev/tcp/localhost/12905 2> /dev/null
else
	echo successfull
fi
